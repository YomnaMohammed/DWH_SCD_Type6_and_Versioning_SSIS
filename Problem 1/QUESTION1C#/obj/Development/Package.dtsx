<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/13/2023 7:10:48 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="YOMNA"
  DTS:CreatorName="YOMNA\LAPTOP"
  DTS:DTSID="{1E97683C-2571-430C-8435-A746F131C050}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5035.3"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="2"
  DTS:VersionGUID="{FAD62DA9-1459-48C6-A56E-649B3F4E5F1B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{6C23FC45-3853-4133-A37F-06D21FDE706E}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_81efd87e292a4627a8a2a5d25e68025b"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_81efd87e292a4627a8a2a5d25e68025b.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6B267030-E251-4D2C-B5FB-DB3772F61476}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_81efd87e292a4627a8a2a5d25e68025b</RootNamespace>
    <AssemblyName>ST_81efd87e292a4627a8a2a5d25e68025b</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\LAPTOP\AppData\Local\Temp\Vsta\SSIS_ST160\VstaWP__UfjviK0SQ0lW3DxQXcg\packages\Newtonsoft.Json.13.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Collections.Generic;
#endregion

namespace ST_81efd87e292a4627a8a2a5d25e68025b
{
    public class Entry
    {
        public string API { get; set; }
        public string Description { get; set; }
        public string Auth { get; set; }
        public bool HTTPS { get; set; }
        public string Cors { get; set; }
        public string Link { get; set; }
        public string Category { get; set; }
    }

    public class Root
    {
        public int Count { get; set; }
        public List<Entry> Entries { get; set; }
    }
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string currentdatetime = DateTime.Now.ToString("yyyyMMddHHmmss");
            string LogFolder = @"D:\learning\FACI\third level\second term\Data warehouse\Assignments\assignment\DWH_Assignment_Ahmed_Galal_20201195_20201223\Problem 1\Logs";
            try
            {
                ServicePointManager.Expect100Continue = true;
                ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

                var json = "";
                using (WebClient wc = new WebClient())
                {
                    json = wc.DownloadString("https://api.publicapis.org/entries");
                }

                Root root = JsonConvert.DeserializeObject<Root>(json);

                foreach (Entry entry in root.Entries)
                {

                    string connectionString = @"Data Source = NERMIN\MSSQLSERVER19 ; Initial Catalog = AssignmentDW; Integrated Security = True; ";

                    using (SqlConnection connection = new SqlConnection(connectionString))
                    {
                        // Open the connection
                        connection.Open();

                        // Create the insert statement
                        string insertStatement = "INSERT INTO JSON_DATA(API, [Description], Auth, HTTPS, Cors, Link, Category) " +
                            "VALUES('" + entry.API.Replace("'", "''") + "', '" + entry.Description.Replace("'", "''") + "', '" + entry.Auth + "', '" + entry.HTTPS + "', '" + entry.Cors + "', '" + entry.Link + "', '" + entry.Category + "')";

                        // Create a SqlCommand object with the insert statement and the SqlConnection object
                        SqlCommand command = new SqlCommand(insertStatement, connection);

                        // Execute the insert statement
                        int rowsAffected = command.ExecuteNonQuery();
                    }


                }
            }
            catch (Exception e)
            {
                using (StreamWriter sw = File.CreateText(LogFolder + "\\" + "ErrorLog_" + currentdatetime + ".log"))
                {
                    sw.WriteLine(e.ToString());
                }

            }
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_81efd87e292a4627a8a2a5d25e68025b</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_81efd87e292a4627a8a2a5d25e68025b</msb:DisplayName>
    <msb:ProjectId>{78B6567F-2113-4D42-84F8-77E255E4EDE5}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_81efd87e292a4627a8a2a5d25e68025b.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="13.0.3" targetFramework="net472" />
</packages>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_81efd87e292a4627a8a2a5d25e68025b.Properties.Settings.get_Default():ST_81efd87e292a4627a8a2a5d25e68025b.Properties.Sett" +
    "ings")]

namespace ST_81efd87e292a4627a8a2a5d25e68025b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_81efd87e292a4627a8a2a5d25e68025b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_81efd87e292a4627a8a2a5d25e68025b")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_81efd87e292a4627a8a2a5d25e68025b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_81efd87e292a4627a8a2a5d25e68025b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_81efd87e292a4627a8a2a5d25e68025b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_81efd87e292a4627a8a2a5d25e68025b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_81efd87e292a4627a8a2a5d25e68025b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_81efd87e292a4627a8a2a5d25e68025b.dll">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
bQCpAGEGEAAZAVMFBgAhAYUBcgApAVkEeAAhAYQHfAAxAWEGggA5AT0IiQAUABQIjQAhAYQHkQBB
AR0ImQBpAFkEeABJAdsBEACJAG4HnwBRAbQHAQCJAGEGBgBZAbsBpQBZATAIrgDRAGEGtADxAGEG
BgAIADgA1wAIADwA3AAgAGMA3AAhAGMA3AAuAAsAVwEuABMAYAEuABsAfwEuACMAiAEuACsAsQEu
ADMAsQEuADsAsQEuAEMAiAEuAEsAtwEuAFMAsQEuAFsAzgFAAGMA3ABBAGMA3ABgAGMA3ABhAGMA
3ACAAGMA3ACBAGMA3ACDAGsA3ACgAGMA3AChAGMA3ACjAHMA3ADAAGMA3ADBAGMA3ADgAGMA3ADh
AGMA3AAAAWMA3AABAWMA3AAgAWMA3AAhAWMA3ABAAWMA3ABJAXsAfwFgAWMA3ABpAXsAfwGAAWMA
3ACBAWMA3ACgAWMA3ADAAWMA3AAAAmMA3AAgAmMA3ABAAmMA3ABgAmMA3AAbAAIAAQADAAgABQAK
AAYADAAAAB0AMwEAANgFMwEAAG8EMwEAADkANwEAAGEHMwEAAIEEMwEAAF4IMwEAAP0HOwEAABQH
PwEAABcGSAEAACICTQEAAKwHUgECAAEAAwABAAIAAwACAAMABQABAAQABQACAAUABwABAAYABwAC
AAcACQABAAgACQACAAkACwABAAoACwACAAsADQABAAwADQACAA0ADwABAA4ADwACABAAEQABABEA
EQACABIAEwABABMAEwACABgAFQACABkAFwABABoAFwACABsAGQBWAGYABIAAAAEAAABZIdd8AAAA
AAAAUwAAAAQAAAAAAAAAAAAAALwAdwAAAAAAEAAAAAAAAAAAAAAAxQCGBAAAAAAEAAAAAAAAAAAA
AAC8ADMFAAAAAAQAAAAAAAAAAAAAALwARwAAAAAADQAAAAAAAAAAAAAAzgD3BQAAAAAAAAAAAQAA
ALIGAAAHAAQAMQBRAAAAAExpc3RgMQA8TW9kdWxlPgBnZXRfQVBJAHNldF9BUEkAU3lzdGVtLklP
AGdldF9IVFRQUwBzZXRfSFRUUFMAdmFsdWVfXwBTeXN0ZW0uRGF0YQBTVF84MWVmZDg3ZTI5MmE0
NjI3YThhMmE1ZDI1ZTY4MDI1YgBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwA8
QVBJPmtfX0JhY2tpbmdGaWVsZAA8SFRUUFM+a19fQmFja2luZ0ZpZWxkADxBdXRoPmtfX0JhY2tp
bmdGaWVsZAA8TGluaz5rX19CYWNraW5nRmllbGQAPERlc2NyaXB0aW9uPmtfX0JhY2tpbmdGaWVs
ZAA8RW50cmllcz5rX19CYWNraW5nRmllbGQAPENvcnM+a19fQmFja2luZ0ZpZWxkADxDb3VudD5r
X19CYWNraW5nRmllbGQAPENhdGVnb3J5PmtfX0JhY2tpbmdGaWVsZABEYkNvbW1hbmQAU3FsQ29t
bWFuZABSZXBsYWNlAGRlZmF1bHRJbnN0YW5jZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRs
ZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAERhdGVUaW1lAFdyaXRlTGluZQBTZWN1cml0eVByb3Rv
Y29sVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBW
U1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9z
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAdmFsdWUAc2V0X0V4cGVjdDEwMENvbnRp
bnVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcARG93bmxvYWRTdHJpbmcAVG9TdHJpbmcAZ2V0
X0F1dGgAc2V0X0F1dGgAZ2V0X0xpbmsAc2V0X0xpbmsATWljcm9zb2Z0LlNxbFNlcnZlci5TY3Jp
cHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2Jq
ZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzgxZWZkODdlMjkyYTQ2MjdhOGEyYTVk
MjVlNjgwMjViLmRsbABzZXRfU2VjdXJpdHlQcm90b2NvbABTeXN0ZW0ARW51bQByZXNvdXJjZU1h
bgBCb29sZWFuAE9wZW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xv
YmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBF
eGNlcHRpb24AZ2V0X0Rlc2NyaXB0aW9uAHNldF9EZXNjcmlwdGlvbgBTeXN0ZW0uRGF0YS5Db21t
b24ATmV3dG9uc29mdC5Kc29uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIAU2Vydmlj
ZVBvaW50TWFuYWdlcgBTdHJlYW1Xcml0ZXIAVGV4dFdyaXRlcgBHZXRFbnVtZXJhdG9yAC5jdG9y
AC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNl
cwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzgxZWZkODdlMjkyYTQ2MjdhOGEyYTVkMjVlNjgwMjViLlBy
b3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBnZXRfRW50cmllcwBz
ZXRfRW50cmllcwBTVF84MWVmZDg3ZTI5MmE0NjI3YThhMmE1ZDI1ZTY4MDI1Yi5Qcm9wZXJ0aWVz
AFNldHRpbmdzAGdldF9Db3JzAHNldF9Db3JzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRz
AENvbmNhdABEZXNlcmlhbGl6ZU9iamVjdABTeXN0ZW0uTmV0AGdldF9EZWZhdWx0AHNldF9UYXNr
UmVzdWx0AFdlYkNsaWVudABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAZ2V0X0N1cnJlbnQAZ2V0X0Nv
dW50AHNldF9Db3VudABSb290AEpzb25Db252ZXJ0AE1vdmVOZXh0AENyZWF0ZVRleHQAZ2V0X05v
dwBnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AGdldF9DYXRlZ29yeQBzZXRfQ2F0ZWdvcnkA
RW50cnkAAAAAAB15AHkAeQB5AE0ATQBkAGQASABIAG0AbQBzAHMAAIEVRAA6AFwAbABlAGEAcgBu
AGkAbgBnAFwARgBBAEMASQBcAHQAaABpAHIAZAAgAGwAZQB2AGUAbABcAHMAZQBjAG8AbgBkACAA
dABlAHIAbQBcAEQAYQB0AGEAIAB3AGEAcgBlAGgAbwB1AHMAZQBcAEEAcwBzAGkAZwBuAG0AZQBu
AHQAcwBcAGEAcwBzAGkAZwBuAG0AZQBuAHQAXABEAFcASABfAEEAcwBzAGkAZwBuAG0AZQBuAHQA
XwBBAGgAbQBlAGQAXwBHAGEAbABhAGwAXwAyADAAMgAwADEAMQA5ADUAXwAyADAAMgAwADEAMgAy
ADMAXABQAHIAbwBiAGwAZQBtACAAMQBcAEwAbwBnAHMAAAEARWgAdAB0AHAAcwA6AC8ALwBhAHAA
aQAuAHAAdQBiAGwAaQBjAGEAcABpAHMALgBvAHIAZwAvAGUAbgB0AHIAaQBlAHMAAIDDRABhAHQA
YQAgAFMAbwB1AHIAYwBlACAAPQAgAE4ARQBSAE0ASQBOAFwATQBTAFMAUQBMAFMARQBSAFYARQBS
ADEAOQAgADsAIABJAG4AaQB0AGkAYQBsACAAQwBhAHQAYQBsAG8AZwAgAD0AIABBAHMAcwBpAGcA
bgBtAGUAbgB0AEQAVwA7ACAASQBuAHQAZQBnAHIAYQB0AGUAZAAgAFMAZQBjAHUAcgBpAHQAeQAg
AD0AIABUAHIAdQBlADsAIAAAgKtJAE4AUwBFAFIAVAAgAEkATgBUAE8AIABKAFMATwBOAF8ARABB
AFQAQQAoAEEAUABJACwAIABbAEQAZQBzAGMAcgBpAHAAdABpAG8AbgBdACwAIABBAHUAdABoACwA
IABIAFQAVABQAFMALAAgAEMAbwByAHMALAAgAEwAaQBuAGsALAAgAEMAYQB0AGUAZwBvAHIAeQAp
ACAAVgBBAEwAVQBFAFMAKAAnAAEDJwABBScAJwABCScALAAgACcAAQUnACkAARVcAEUAcgByAG8A
cgBMAG8AZwBfAAAJLgBsAG8AZwAAcVMAVABfADgAMQBlAGYAZAA4ADcAZQAyADkAMgBhADQANgAy
ADcAYQA4AGEAMgBhADUAZAAyADUAZQA2ADgAMAAyADUAYgAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAJXXRFE3U7kGdsdCV/HsZxwAEIAEBCAMgAAEFIAEBEREEIAEB
DgUgAQERcRgHCw4OEUkOEk0VEVEBEggSCBJVAhJZEl0EAAARSQQgAQ4OBAABAQIGAAEBEYCBBhAB
AR4ADgQKARIMBhUSPQESCAggABURUQETAAYVEVEBEggEIAATAAUgAg4ODgMgAA4FAAEOHQ4GIAIB
DhJVAyAACAMgAAIHAAQODg4ODgUAARJdDgUgABKAqQgAARKArRGAsQUgABKAtQcgAgEOEoC1CLd6
XFYZNOCJCImEXc2AgMyRCDCtT+aypq7tBAAAAAAEAQAAAAIGDgIGAgIGCAcGFRI9ARIIAwYSaQMG
Em0DBhIYAwYRHAQgAQECCCAAFRI9ARIICSABARUSPQESCAQAABJpBAAAEm0FAAEBEm0EAAASGAMA
AAEDKAAOAygAAgMoAAgIKAAVEj0BEggECAASaQQIABJtBAgAEhgIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzgxZWZkODdlMjkyYTQ2MjdhOGEy
YTVkMjVlNjgwMjViAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjMAAEkBABouTkVURnJhbWV3
b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsg
NC43tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nv
cmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3
N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAA
AAAAAABQQURQQURQtAAAALg6AAAAAAAAAAAAANI6AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADE
OgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQDXfFkhAAABANd8WSE/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfADgAMQBlAGYAZAA4ADcAZQAyADkAMgBhADQANgAyADcAYQA4AGEAMgBhADUAZAAyADUAZQA2
ADgAMAAyADUAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4ADUA
MwA3AC4AMwAxADkANQA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
ADgAMQBlAGYAZAA4ADcAZQAyADkAMgBhADQANgAyADcAYQA4AGEAMgBhADUAZAAyADUAZQA2ADgA
MAAyADUAYgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8AOAAxAGUAZgBkADgANwBlADIAOQAyAGEANAA2ADIANwBhADgAYQAyAGEANQBkADIA
NQBlADYAOAAwADIANQBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfADgAMQBlAGYAZAA4ADcAZQAyADkAMgBhADQANgAyADcAYQA4AGEAMgBhADUAZAAyADUA
ZQA2ADgAMAAyADUAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AOAA1ADMANwAuADMAMQA5ADUAOQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4AOAA1ADMANwAuADMAMQA5ADUAOQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADkOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Script Task"
          TopLeft="354.523785341524,136.576468467405" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>